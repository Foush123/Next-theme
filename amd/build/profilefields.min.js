/**
 * Module to enforce required and locked profile fields during user creation.
 *
 * @module     theme_trema/profilefields
 * @author     Rodrigo Mady
 * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later
 */
define("theme_trema/profilefields",["jquery","core/str","core/notification"],(function($,Str,Notification){var setupUserCreationPage=function(profileFieldsData){profileFieldsData.length>0&&addFormValidation(profileFieldsData)},addFormValidation=function(fields){var form=$("#id_mform1"),requiredString="Required";Str.get_string("required","core").then((function(string){return requiredString=string,!0})).catch(Notification.exception);var categoriesToExpand=[];fields.forEach((function(field){var fieldId="id_profile_field_"+field;if((field=$("#"+fieldId)).length>0){var formGroup=field.closest(".form-group");0===formGroup.length&&(formGroup=field.closest(".fitem"));var category=field.closest("fieldset.collapsible");category.length>0&&-1===categoriesToExpand.indexOf(category.attr("id"))&&categoriesToExpand.push(category.attr("id")),field.attr("required","required"),field.attr("aria-required","true");var labelCol=formGroup.find(".col-form-label"),labelAddon=labelCol.find(".form-label-addon");if(0===labelAddon.length&&(labelAddon=$('<div class="form-label-addon d-flex align-items-center align-self-start"></div>'),labelCol.append(labelAddon)),0===labelAddon.find(".text-danger").length){var requiredIcon=$('<div class="text-danger" title="Required"><i class="icon fa fa-exclamation-circle text-danger fa-fw " title="Required" role="img" aria-label="Required"></i></div>');labelAddon.append(requiredIcon)}var errorId=fieldId+"_error",felement=formGroup.find(".felement");if(felement.length>0&&!felement.find("#"+errorId).length){var errorContainer=$('<div class="form-control-feedback invalid-feedback" id="'+errorId+'"></div>');felement.append(errorContainer)}field.on("blur",(function(){validateField(field,requiredString)})),form.data("validation-added")||(form.on("submit",(function(e){var isValid=!0;if(fields.forEach((function(fieldName){var fieldToValidate=$("#id_profile_field_"+fieldName);fieldToValidate.length>0&&!validateField(fieldToValidate,requiredString)&&(isValid=!1)})),!isValid){e.preventDefault();var firstInvalidField=$(".form-group.has-danger").first();firstInvalidField.length>0&&$("html, body").animate({scrollTop:firstInvalidField.offset().top-100},200)}})),form.data("validation-added",!0))}})),categoriesToExpand.forEach((function(categoryId){var category=$("#"+categoryId);if(category.length>0){var toggleLink=category.find("a.fheader"),containerId=toggleLink.attr("aria-controls"),container=$("#"+containerId);toggleLink.hasClass("collapsed")&&(toggleLink.removeClass("collapsed"),toggleLink.attr("aria-expanded","true"),container.addClass("show"),container.attr("aria-hidden","false"))}}))},validateField=function(field,requiredString){var fieldId=field.attr("id"),formGroup=field.closest(".form-group"),errorContainer=$("#"+fieldId+"_error"),value=field.val();field.is('input[type="checkbox"]')?value=field.is(":checked"):field.is('input[type="radio"]')?value=formGroup.find('input[type="radio"]:checked').length>0:field.is("select")&&(""!==value&&"0"!==value&&"-1"!==value||(value=""));var isValid=null!==value&&""!==value&&!1!==value;return isValid?(formGroup.removeClass("has-danger"),field.removeClass("is-invalid"),errorContainer.length&&errorContainer.empty()):(formGroup.addClass("has-danger"),field.addClass("is-invalid"),errorContainer.length&&errorContainer.text(requiredString)),isValid};return{init:function(profileFieldsData){setupUserCreationPage(profileFieldsData||{})}}}));

//# sourceMappingURL=profilefields.min.js.map