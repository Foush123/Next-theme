{"version":3,"file":"profilefields.min.js","sources":["../src/profilefields.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Module to enforce required and locked profile fields during user creation.\n *\n * @module     theme_trema/profilefields\n * @author     Rodrigo Mady\n * @license    http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\ndefine(['jquery', 'core/str', 'core/notification'], function($, Str, Notification) {\n\n    /**\n     * Initialize the module.\n     *\n     * @param {Object} profileFieldsData - Data containing required profile fields\n     */\n    var init = function(profileFieldsData) {\n        setupUserCreationPage(profileFieldsData || {});\n    };\n\n    /**\n     * Setup handlers for the user creation page.\n     *\n     * @param {Object} profileFieldsData - Data containing required profile fields\n     */\n    var setupUserCreationPage = function(profileFieldsData) {\n        if (profileFieldsData.length > 0) {\n            addFormValidation(profileFieldsData);\n        }\n    };\n\n    /**\n     * Add validation to the user creation form.\n     *\n     * @param {Array} fields - Array of fields that are required\n     */\n    var addFormValidation = function(fields) {\n        // Get the form element\n        var $form = $('#id_mform1');\n\n        // Get the required string for validation messages\n        var requiredString = 'Required';\n        Str.get_string('required', 'core').then(function(string) {\n            requiredString = string;\n            return true;\n        }).catch(Notification.exception);\n\n        // Process each profile field that is required.\n        fields.forEach(function(field) {\n            var fieldId = 'id_profile_field_' + field;\n            var $field = $('#' + fieldId);\n\n            if ($field.length > 0) {\n                var $formGroup = $field.closest('.form-group');\n\n                $field.attr('required', 'required');\n\n                $field.attr('aria-required', 'true');\n\n                var $labelCol = $formGroup.find('.col-form-label');\n                var $labelAddon = $labelCol.find('.form-label-addon');\n\n                if ($labelAddon.length === 0) {\n                    $labelAddon = $('<div class=\"form-label-addon d-flex align-items-center align-self-start\"></div>');\n                    $labelCol.append($labelAddon);\n                }\n\n                // Add the required icon if not present\n                if ($labelAddon.find('.text-danger').length === 0) {\n                    var $requiredIcon = $(\n                        '<div class=\"text-danger\" title=\"Required\">' +\n                        '<i class=\"icon fa fa-exclamation-circle text-danger fa-fw \" ' +\n                        'title=\"Required\" role=\"img\" aria-label=\"Required\"></i>' +\n                        '</div>'\n                    );\n                    $labelAddon.append($requiredIcon);\n                }\n\n                var errorId = fieldId + '_error';\n                var $felement = $formGroup.find('.felement');\n                if ($felement.length > 0 && !$felement.find('#' + errorId).length) {\n                    var $errorContainer = $('<div class=\"form-control-feedback invalid-feedback\" id=\"' + errorId + '\"></div>');\n                    $felement.append($errorContainer);\n                }\n\n                $field.on('blur', function() {\n                    validateField($field, requiredString);\n                });\n\n                if (!$form.data('validation-added')) {\n                    $form.on('submit', function(e) {\n                        var isValid = true;\n\n                        // Validate all required profile fields\n                        fields.forEach(function(fieldName) {\n                            var fieldSelector = '#id_profile_field_' + fieldName;\n                            var $fieldToValidate = $(fieldSelector);\n\n                            if ($fieldToValidate.length > 0 && !validateField($fieldToValidate, requiredString)) {\n                                isValid = false;\n                            }\n                        });\n\n                        if (!isValid) {\n                            e.preventDefault();\n                            // Scroll to the first invalid field\n                            var $firstInvalidField = $('.form-group.has-danger').first();\n                            if ($firstInvalidField.length > 0) {\n                                $('html, body').animate({\n                                    scrollTop: $firstInvalidField.offset().top - 100\n                                }, 200);\n                            }\n                        }\n                    });\n\n                    $form.data('validation-added', true);\n                }\n            }\n        });\n    };\n\n    /**\n     * Validate a single field.\n     *\n     * @param {jQuery} $field - The field to validate\n     * @param {String} requiredString - The text to display for required fields\n     * @return {boolean} - Whether the field is valid\n     */\n    var validateField = function($field, requiredString) {\n        var fieldId = $field.attr('id');\n        var $formGroup = $field.closest('.form-group');\n        var $errorContainer = $('#' + fieldId + '_error');\n\n        // Get the field value, handling different input types\n        var value = $field.val();\n        if ($field.is('input[type=\"checkbox\"]')) {\n            value = $field.is(':checked');\n        } else if ($field.is('input[type=\"radio\"]')) {\n            value = $formGroup.find('input[type=\"radio\"]:checked').length > 0;\n        } else if ($field.is('select')) {\n            // For select elements, empty string or default \"choose\" option is invalid\n            if (value === '' || value === '0' || value === '-1') {\n                value = '';\n            }\n        }\n\n        // Check if the field has a value\n        var isValid = value !== null && value !== '' && value !== false;\n\n        if (isValid) {\n            // Field is valid - remove error styling\n            $formGroup.removeClass('has-danger');\n            $field.removeClass('is-invalid');\n            if ($errorContainer.length) {\n                $errorContainer.empty();\n            }\n        } else {\n            // Field is invalid - add error styling\n            $formGroup.addClass('has-danger');\n            $field.addClass('is-invalid');\n            if ($errorContainer.length) {\n                $errorContainer.text(requiredString);\n            }\n        }\n\n        return isValid;\n    };\n\n    return {\n        init: init\n    };\n});"],"names":["define","$","Str","Notification","setupUserCreationPage","profileFieldsData","length","addFormValidation","fields","$form","requiredString","get_string","then","string","catch","exception","forEach","field","fieldId","$field","$formGroup","closest","attr","$labelCol","find","$labelAddon","append","$requiredIcon","errorId","$felement","$errorContainer","on","validateField","data","e","isValid","fieldName","$fieldToValidate","preventDefault","$firstInvalidField","first","animate","scrollTop","offset","top","value","val","is","removeClass","empty","addClass","text","init"],"mappings":";;;;;;;AAuBAA,mCAAO,CAAC,SAAU,WAAY,sBAAsB,SAASC,EAAGC,IAAKC,kBAgB7DC,sBAAwB,SAASC,mBAC7BA,kBAAkBC,OAAS,GAC3BC,kBAAkBF,oBAStBE,kBAAoB,SAASC,YAEzBC,MAAQR,EAAE,cAGVS,eAAiB,WACrBR,IAAIS,WAAW,WAAY,QAAQC,MAAK,SAASC,eAC7CH,eAAiBG,QACV,KACRC,MAAMX,aAAaY,WAGtBP,OAAOQ,SAAQ,SAASC,WAChBC,QAAU,oBAAsBD,MAChCE,OAASlB,EAAE,IAAMiB,YAEjBC,OAAOb,OAAS,EAAG,KACfc,WAAaD,OAAOE,QAAQ,eAEhCF,OAAOG,KAAK,WAAY,YAExBH,OAAOG,KAAK,gBAAiB,YAEzBC,UAAYH,WAAWI,KAAK,mBAC5BC,YAAcF,UAAUC,KAAK,wBAEN,IAAvBC,YAAYnB,SACZmB,YAAcxB,EAAE,mFAChBsB,UAAUG,OAAOD,cAI2B,IAA5CA,YAAYD,KAAK,gBAAgBlB,OAAc,KAC3CqB,cAAgB1B,EAChB,sKAKJwB,YAAYC,OAAOC,mBAGnBC,QAAUV,QAAU,SACpBW,UAAYT,WAAWI,KAAK,gBAC5BK,UAAUvB,OAAS,IAAMuB,UAAUL,KAAK,IAAMI,SAAStB,OAAQ,KAC3DwB,gBAAkB7B,EAAE,2DAA6D2B,QAAU,YAC/FC,UAAUH,OAAOI,iBAGrBX,OAAOY,GAAG,QAAQ,WACdC,cAAcb,OAAQT,mBAGrBD,MAAMwB,KAAK,sBACZxB,MAAMsB,GAAG,UAAU,SAASG,OACpBC,SAAU,KAGd3B,OAAOQ,SAAQ,SAASoB,eAEhBC,iBAAmBpC,EADH,qBAAuBmC,WAGvCC,iBAAiB/B,OAAS,IAAM0B,cAAcK,iBAAkB3B,kBAChEyB,SAAU,OAIbA,QAAS,CACVD,EAAEI,qBAEEC,mBAAqBtC,EAAE,0BAA0BuC,QACjDD,mBAAmBjC,OAAS,GAC5BL,EAAE,cAAcwC,QAAQ,CACpBC,UAAWH,mBAAmBI,SAASC,IAAM,KAC9C,SAKfnC,MAAMwB,KAAK,oBAAoB,SAa3CD,cAAgB,SAASb,OAAQT,oBAC7BQ,QAAUC,OAAOG,KAAK,MACtBF,WAAaD,OAAOE,QAAQ,eAC5BS,gBAAkB7B,EAAE,IAAMiB,QAAU,UAGpC2B,MAAQ1B,OAAO2B,MACf3B,OAAO4B,GAAG,0BACVF,MAAQ1B,OAAO4B,GAAG,YACX5B,OAAO4B,GAAG,uBACjBF,MAAQzB,WAAWI,KAAK,+BAA+BlB,OAAS,EACzDa,OAAO4B,GAAG,YAEH,KAAVF,OAA0B,MAAVA,OAA2B,OAAVA,QACjCA,MAAQ,SAKZV,QAAoB,OAAVU,OAA4B,KAAVA,QAA0B,IAAVA,aAE5CV,SAEAf,WAAW4B,YAAY,cACvB7B,OAAO6B,YAAY,cACflB,gBAAgBxB,QAChBwB,gBAAgBmB,UAIpB7B,WAAW8B,SAAS,cACpB/B,OAAO+B,SAAS,cACZpB,gBAAgBxB,QAChBwB,gBAAgBqB,KAAKzC,iBAItByB,eAGJ,CACHiB,KAzJO,SAAS/C,mBAChBD,sBAAsBC,mBAAqB"}